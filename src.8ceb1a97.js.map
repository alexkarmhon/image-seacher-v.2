{"version":3,"sources":["js/imageAPIservice.js","js/load-more-btn.js","js/gallery.js","js/themes-swither.js","index.js"],"names":["BASE_URL","API_KEY","ImagesAPIservice","constructor","searchQuery","page","baseUrl","key","newQuery","incrPage","resetPage","data","fetch","query","json","exports","default","LoadMoreButton","selector","hidden","refs","getRefs","hide","button","document","querySelector","label","spinner","enable","disabled","textContent","classList","add","disable","remove","show","_imageAPIservice","_interopRequireDefault","require","_loadMoreBtn","obj","__esModule","formInput","getElementById","galleryLst","loadMoreBtn","imageAPIserviceIsue","loadMoreButtonIsue","createMarkup","arr","map","item","webformatURL","tags","likes","views","comments","downloads","join","clearGallery","innerHTML","renderGallery","hits","totalHits","fetchImagesByQuery","insertAdjacentHTML","length","onLoadMoreBtnClick","scrollIntoView","behavior","block","onInputSubmit","e","preventDefault","value","target","elements","trim","addEventListener","switcher","body","DARK","LIGHT","pageTheme","localStorage","getItem","onSwitchChange","toggle","setItem","checked"],"mappings":"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","file":"src.8ceb1a97.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '26677843-2a3fc57e20ccdb9e08e3bd20d';\n\nexport default class ImagesAPIservice {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.baseUrl = BASE_URL;\n    this.key = API_KEY;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  incrPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  async fetchImagesByQuery() {\n    const data = await fetch(`${this.baseUrl}?key=${this.key}&q=${this.query}&page=${this.page}&per_page=12`);\n    // const {hits} = await data.json();\n  \n    // return hits;\n\n    return await data.json()\n  }\n}\n\n// Приклад використання\n// const images = new ImagesAPIservice();\n// images.query = 'cat';\n// images.fetchImagesByQuery()\n","export default class LoadMoreButton {\n  constructor({ selector, hidden = false }) {\n    this.refs = this.getRefs(selector);\n\n    hidden&&this.hide()\n  }\n\n  getRefs(selector) {\n    const refs = {};\n    refs.button = document.querySelector(selector);\n    refs.label = refs.button.querySelector('.label');\n    refs.spinner = refs.button.querySelector('.spinner');\n    return refs;\n  }\n\n  enable() { \n    this.refs.button.disabled = false;\n    this.refs.label.textContent = 'Show more';\n    this.refs.spinner.classList.add('is-hidden');\n  }\n  \n  disable() { \n    this.refs.button.disabled = true;\n    this.refs.label.textContent = 'Loading...';\n    this.refs.spinner.classList.remove('is-hidden');\n  }\n  \n  show() { \n    this.refs.button.classList.remove('is-hidden');\n  }\n  \n  hide() { \n    this.refs.button.classList.add('is-hidden')\n  }\n}","import ImagesAPIservice from \"./imageAPIservice\";\nimport LoadMoreButton from \"./load-more-btn\";\n\nconst formInput = document.getElementById('search-form');\nconst galleryLst = document.getElementById('gallery-list');\nconst loadMoreBtn = document.getElementById('moreBtn');\n\nconst imageAPIserviceIsue = new ImagesAPIservice();\nconst loadMoreButtonIsue = new LoadMoreButton({\n  selector: '[data-action=\"load-more\"]',\n  hidden: true\n});\n\n\nfunction createMarkup(arr) {\n  return arr.map((item) => `\n  <li class=\"gallery-item\">\n        <div class=\"photo-card\">\n          <div class=\"gallery-image-box\">\n            <img class=\"gallery-image\" src=\"${item.webformatURL}\" alt=\"${item.tags}\" />\n          </div>\n          <div class=\"stats\">\n            <p class=\"stats-item\">\n              <i class=\"material-icons\">thumb_up</i>\n              ${item.likes}\n            </p>\n\n            <p class=\"stats-item\">\n              <i class=\"material-icons\">visibility</i>\n              ${item.views}\n            </p>\n\n            <p class=\"stats-item\">\n              <i class=\"material-icons\">comment</i>\n              ${item.comments}\n            </p>\n\n            <p class=\"stats-item\">\n              <i class=\"material-icons\">cloud_download</i>\n              ${item.downloads}\n            </p>\n          </div>\n        </div>\n      </li>\n  `).join('');\n}\n\nfunction clearGallery() {\n  // formInput.reset();\n  imageAPIserviceIsue.resetPage();\n  galleryLst.innerHTML = '';\n  loadMoreButtonIsue.hide();\n}\n\nasync function renderGallery() {\n  loadMoreButtonIsue.disable();\n\n  const {hits, totalHits} = await imageAPIserviceIsue.fetchImagesByQuery();\n  galleryLst.insertAdjacentHTML('beforeend', createMarkup(hits));\n\n  if (hits.length * imageAPIserviceIsue.page >= totalHits) { loadMoreButtonIsue.hide() };\n\n  loadMoreButtonIsue.enable();\n}\n\nfunction onLoadMoreBtnClick() {\n  imageAPIserviceIsue.incrPage();\n  renderGallery();\n  galleryLst.scrollIntoView({\n    behavior: \"smooth\",\n    block: \"end\"\n  })\n} \n\nfunction onInputSubmit(e) {\n  e.preventDefault();\n  clearGallery();\n\n  const value = e.target.elements.query.value.trim();\n  if (!value) {\n    clearGallery();\n    return;\n  };\n  imageAPIserviceIsue.query = value;\n  renderGallery();\n\n  loadMoreButtonIsue.show();\n  loadMoreBtn.addEventListener('click', onLoadMoreBtnClick)\n}\n\nformInput.addEventListener('submit', onInputSubmit);","import '../sass/main.scss';\nconst switcher = document.getElementById('theme-switch-toggle');\nconst body = document.querySelector('body');\n\nconst { DARK, LIGHT } = {\n  DARK: 'dark-theme',\n  LIGHT: 'light-theme'\n}\n\nlet pageTheme = localStorage.getItem('page-theme') || LIGHT;\nbody.classList.add(pageTheme);\nswitcher.checked = pageTheme === DARK;\n\nfunction onSwitchChange() {\n  body.classList.toggle(LIGHT);\n  body.classList.toggle(DARK);\n\n  pageTheme = pageTheme === LIGHT ? DARK : LIGHT;\n  localStorage.setItem('page-theme', pageTheme)\n}\n\nswitcher.addEventListener('change', onSwitchChange)","import \"./sass/main.scss\";\nimport \"./js/imageAPIservice.js\";\nimport \"./js/gallery.js\";\nimport \"./js/themes-swither.js\";\nimport \"./js/load-more-btn.js\";"]}